// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.api.nexusservice.v1;

option go_package = "go.temporal.io/api/nexusservice/v1;nexusservice";
option java_package = "io.temporal.api.nexusservice.v1";
option java_multiple_files = true;
option java_outer_classname = "RequestResponseProto";
option ruby_package = "Temporalio::Api::NexusService::V1";
option csharp_namespace = "Temporalio.Api.NexusService.V1";

// Extremely generic message defnition.
// Intentionally left generic to map to and from protocols like HTTP.
message Message {
  repeated Header headers = 1;
  bytes body = 2;

  message Header {
    bytes key = 1;
    repeated bytes values = 2;
  }
}

// A Nexus request, other fields might be added here to provide a stronger contract.
// For now it is intentionally left as generic as possible.
// Right now there's no place to put the HTTP path and TLS info, those would need to either be part of the message
// headers or get a designated proto-specific metadata field.
message CallRequest {
    Message message = 1;
}

// A Nexus response, other fields might be added here to provide a stronger contract.
// For now it is intentionally left as generic as possible.
message CallResponse {
    Message message = 1;
}
